{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Interface Product","text":"<p>A interface <code>ProductController</code> define os contratos REST expostos pelo <code>product-service</code>.</p> <p>Ela funciona como um Feign Client e permite:</p> <ul> <li>Criar novos produtos</li> <li>Listar produtos</li> <li>Buscar produto por ID</li> <li>Excluir um produto</li> </ul> <p>Esta interface deve ser implementada por um microsservi\u00e7o com persist\u00eancia (como o <code>product-service</code>).</p>"},{"location":"endpoints/","title":"Endpoints","text":""},{"location":"endpoints/#post-product","title":"<code>POST /product</code>","text":"<p>Cria um novo produto.</p> <ul> <li>Request body: <code>ProductIn</code></li> <li>Response: <code>ProductOut</code></li> </ul>"},{"location":"endpoints/#get-product","title":"<code>GET /product</code>","text":"<p>Retorna todos os produtos cadastrados.</p> <ul> <li>Response: <code>List&lt;ProductOut&gt;</code></li> </ul>"},{"location":"endpoints/#get-productidproduct","title":"<code>GET /product/{idProduct}</code>","text":"<p>Busca um produto pelo seu ID.</p> <ul> <li>Path param: <code>idProduct</code></li> <li>Response: <code>ProductOut</code></li> </ul>"},{"location":"endpoints/#delete-productidproduct","title":"<code>DELETE /product/{idProduct}</code>","text":"<p>Remove um produto do sistema.</p> <ul> <li>Path param: <code>idProduct</code></li> <li>Response: <code>204 No Content</code></li> </ul>"},{"location":"entidades/","title":"Entidades","text":""},{"location":"entidades/#productin","title":"<code>ProductIn</code>","text":"<p>Representa os dados de entrada para cadastro de produto.</p> <pre><code>record ProductIn(\n    String name,\n    Double price,\n    String unit\n)\n</code></pre> <ul> <li> <p><code>name</code>: nome do produto</p> </li> <li> <p><code>price</code>: pre\u00e7o unit\u00e1rio</p> </li> <li> <p><code>unit</code>: unidade de medida (ex: kg, un, L)</p> </li> </ul>"},{"location":"entidades/#productout","title":"<code>ProductOut</code>","text":"<p>Representa a resposta da API ao lidar com produtos.</p> <pre><code>record ProductOut(\n    String id,\n    String name,\n    Double price,\n    String unit\n)\n</code></pre> <ul> <li><code>id</code>: identificador \u00fanico do produto</li> <li><code>name</code>: nome do produto</li> <li><code>price</code>: pre\u00e7o unit\u00e1rio</li> <li><code>unit</code>: unidade de medida (ex: kg, un, L)</li> </ul>"},{"location":"setup/","title":"Setup e Execu\u00e7\u00e3o - Interface Product","text":"<p>Este m\u00f3dulo define os contratos da API REST do servi\u00e7o de produtos.</p>"},{"location":"setup/#requisitos","title":"Requisitos","text":"<ul> <li>Java 17+</li> <li>Spring Boot</li> <li>Lombok</li> <li>OpenFeign</li> </ul>"},{"location":"setup/#dependencias-no-pomxml","title":"Depend\u00eancias no <code>pom.xml</code>","text":"<ul> <li><code>spring-boot-starter-web</code></li> <li><code>spring-cloud-starter-openfeign</code></li> <li><code>lombok</code></li> </ul>"},{"location":"setup/#como-usar","title":"Como usar","text":"<p>Este m\u00f3dulo deve ser implementado por um servi\u00e7o persistente (<code>product-service</code>) e pode ser consumido por outros microsservi\u00e7os que precisam buscar informa\u00e7\u00f5es de produtos.</p>"},{"location":"setup/#exemplo-de-uso-via-feign","title":"Exemplo de uso via Feign:","text":"<pre><code>@FeignClient(name = \"product\", url = \"http://product:8080\")\npublic interface ProductController {\n    // ...\n}\n</code></pre>"}]}